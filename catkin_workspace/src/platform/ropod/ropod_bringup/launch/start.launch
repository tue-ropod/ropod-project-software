<?xml version="1.0"?>
<launch>
	<!-- Configurable Parameters -->
	<arg name="robotName" default="ropod"/>   
	<arg name="loadName" default="mobidik"/>   
	<arg name="LOAD_ATTACHED" default="false" />	
	<arg name="laser" default="true"/>
	<arg name="laser1_name" value ="laser"/>
	<arg name="asus_cam" default="false"/> 
	<arg name="asus_cam_name" value="asusxtion"/>
	<arg name="asus_cam_calibration" default="false"/>
	<arg name="gmapping" default="false"/>
	<!--<arg name="floorplan" default="$(find ropod_demo_dec_2017)/config/shape/floorplan_ropod_demo"/>-->
	<arg name="floorplan" default="$(find ed_object_models)/models/hospital_test_amcl/walls/shape/Floorplan_demo_ROPOD_amcl"/>
	<arg name="ROBOT_REAL" default="$(optenv ROBOT_REAL)" />
	<arg name="robot_path" default="$(env CATKIN_WORKSPACE)/src/platform/$(arg robotName)"/>
	<arg name="robot_bringup_path" default="$(arg robot_path)/$(arg robotName)_bringup"/>

	<group ns="$(arg robotName)">
		<!-- Start gmapping if required-->
		<group if="$(arg gmapping)">
			  <include file="$(find robot_common)/launch/localization/gmapping.launch">
				<arg name="robot" value="$(arg robotName)" />
				<arg name="sensor" value="$(arg laser1_name)"/>
			</include>
		</group>
		
		<group if="$(arg ROBOT_REAL)">
	  	<!-- Do for both: Simulator and Real Robot -->
		
		        <!-- Kinematic Controller: Executes velocity commands and publishes Odometry  -->		  
			<node pkg="ropod_4wheel_kinb_cntr" type="ropod_4wheel_kinb_cntr_node" name="ropod_4wheel_kinb_cntr_node" output="screen">
			  <remap from="/cmd_vel" to="/$(arg robotName)/cmd_vel"/>
			  <remap from="/odom_incomplete" to="/$(arg robotName)/odom_incomplete"/>
			</node>
			  
	
			<!-- dynamic tf broadcaster -->	
			<group unless="$(arg LOAD_ATTACHED)">
			    <node pkg="ropod_bringup" type="ropod_tf_broadcaster_simulator" name="ropod_tf_broadcaster_simulator" />			    
			</group> 
			<group if="$(arg LOAD_ATTACHED)">
			    <node pkg="ropod_bringup" type="ropod_mobidik_tf_broadcaster_simulator" name="ropod_mobidik_tf_broadcaster_simulator" />
			</group>
			
			<!-- Specify static transforms -->
			<include file="$(arg robot_bringup_path)/parameters/hardware/static_tf.launch">
				<arg name="robot" value="$(arg robotName)" />
				<arg name="laser1" value="$(arg laser1_name)"/>
			</include> 			

			<!-- Laser publishing -->
			<group if="$(arg laser)">
				<include file="$(find robot_common)/launch/hardware/sick_laser.launch">
					<arg name="bringup_path" value="$(arg robot_bringup_path)"/>
					<arg name="name" value="$(arg laser1_name)"/>
					<arg name="robot" value="$(arg robotName)"/>
				</include>
			</group>

			
		</group>	
	</group>

	<group unless="$(arg ROBOT_REAL)">
	<!-- SIMULATION -->  
	
	        <group unless="$(arg LOAD_ATTACHED)">	  
			<include file="$(find robot_common)/launch/simulator/gazebo_simulator.launch" >
				<arg name="robot" value="$(arg robotName)" />
				<arg name="model_name" value="$(arg robotName)" />
				<arg name="model_path" value="$(arg robot_path)/$(arg robotName)_model" />
			</include>
	
			<!-- Launch tf broadcaster for ropod robot -->
			<node pkg="ropod_bringup" type="ropod_tf_broadcaster_simulator" name="ropod_tf_broadcaster_simulator" />

		</group>
		
		<group if="$(arg LOAD_ATTACHED)">
		
			<include file="$(find robot_common)/launch/simulator/gazebo_simulator.launch" >
				<arg name="robot" value="$(arg robotName)" />
				<arg name="model_name" value="$(arg robotName)_$(arg loadName)" />				
				<arg name="model_path" value="$(arg robot_path)/$(arg robotName)_model" />
			</include>
	
			<!-- Launch tf broadcaster for ropod robot -->
			<node pkg="ropod_bringup" type="ropod_mobidik_tf_broadcaster_simulator" name="ropod_mobidik_tf_broadcaster_simulator" />
		
		</group>
		
		<!-- Specify static transforms -->
		<include file="$(arg robot_bringup_path)/parameters/hardware/static_tf.launch">
			<arg name="robot" value="$(arg robotName)" />
			<arg name="laser1" value="$(arg laser1_name)"/>
		</include> 
		
		<!-- Add floorplan. -->
		<node name="spawn_urdf" pkg="gazebo_ros" type="spawn_model" 
			args="-file $(arg floorplan).urdf -urdf -z 1 -model floorplan -x -4.9 -y 9.8 -z 0 -Y -1.54" 
		/>	
		<!-- Launch RVIZ -->
		<include file="$(arg robot_bringup_path)/launch/tools/rviz.launch"/>
		
	</group>

</launch>
